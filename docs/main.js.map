{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/services/http.service.ts","./src/app/components/interceptors/http-headers.interceptor.ts","./src/app/components/details/details.component.html","./src/app/components/details/details.component.ts","./src/app/components/game-tabs/game-tabs.component.html","./src/app/components/game-tabs/game-tabs.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/components/interceptors/http-errors.interceptor.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  BASE_URL: 'https://api.rawg.io/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"filters\">\n  <mat-form-field>\n    <mat-label>Sort</mat-label>\n    <mat-select panelClass=\"sert-select\" [(ngModel)]=\"sort\" (selectionChange)=\"searchGames(sort)\">\n      <mat-option value=\"name\">Name</mat-option>\n      <mat-option value=\"released\">Released</mat-option>\n      <mat-option value=\"added\">Added</mat-option>\n      <mat-option value=\"created\">Created</mat-option>\n      <mat-option value=\"updated\">Updated</mat-option>\n      <mat-option value=\"rating\">Rating</mat-option>\n      <mat-option value=\"metacritic\">Metacritic</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div class=\"games\">\n  <ng-container *ngFor=\"let game of games\">\n    <div class=\"game\" (click)=\"openGameDetails(game.id)\">\n      <div class=\"game-thumb-container\">\n        <img *ngIf=\"game.background_image\" src=\"{{ game.background_image }}\" alt=\"\" class=\"game-thumbnail\" />\n        <p *ngIf=\"!game.background_image\">No Image</p>\n      </div>\n      <div class=\"game-description\">\n        <p class=\"game-name\">{{ game.name }}</p>\n        <div class=\"game-platforms\">\n          <img *ngFor=\"let gamePlatform of game.parent_platforms\"\n            src=\"assets/images/platforms/{{ gamePlatform.platform.slug }}.svg\" alt=\"{{ gamePlatform.platform.slug }}\"\n            class=\"game-platform\" />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>","import { APIResponse } from './../../models';\nimport { HttpService } from './../../services/http.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Game } from 'src/app/models';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public sort: string;\n  public games: Array<Game>;\n  private routeSub: Subscription;\n  private gameSub: Subscription;\n\n  constructor(\n    private HttpService: HttpService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.routeSub = this.activatedRoute.params.subscribe((params: Params) => {\n      if (params['game-search']) {\n        this.searchGames('metacrit', params['game-search']);\n      } else {\n        this.searchGames('metacrit');\n      }\n    });\n  }\n\n  searchGames(sort: string, search?: string): void {\n    this.gameSub = this.HttpService\n      .getGameList(sort, search)\n      .subscribe((gamelist: APIResponse<Game>) => {\n        this.games = gamelist.results;\n        console.log(gamelist);\n      });\n  }\n\n  openGameDetails(id: string): void {\n    this.router.navigate(['details', id]);\n  }\n\n  ngOnDestroy(): void {\n    if (this.routeSub) {\n      this.routeSub.unsubscribe();\n    }\n\n    if (this.gameSub) {\n      this.gameSub.unsubscribe();\n    }\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment as env } from \"src/environments/environment\";\nimport { APIResponse, Game } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  getGameList(\n    ordering: string,\n    search?: string\n  ): Observable<APIResponse<Game>> {\n    let params = new HttpParams().set('ordering', ordering);\n  \n    if (search) {\n      params = new HttpParams().set('ordering', ordering).set('search', search);\n    }\n\n    return this.http.get<APIResponse<Game>>(`${env.BASE_URL}/games`, {\n      params: params,\n    })\n  }\n\n  getGameDetails(id: string): Observable<Game> {\n    const gameInfoRequest = this.http.get(\n      `${env.BASE_URL}/games/${id}`\n      );\n    const gameTrailerRequest = this.http.get(\n      `${env.BASE_URL}/games/${id}/movies`\n    );\n    const gameScreenshotsRequest = this.http.get(\n      `${env.BASE_URL}/games/${id}/screenshots`\n    );\n\n    return forkJoin({\n      gameInfoRequest,\n      gameScreenshotsRequest,\n      gameTrailerRequest\n    }).pipe(\n      map((resp: any) => {\n        return {\n          ...resp['gameInfoRequest'],\n          screenshots: resp['gameScreenshotsRequest']?.results,\n          trailers: resp['gameTrailerRequest']?.results\n        };\n      })\n    );\n  }\n}\n","import { Observable } from 'rxjs';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HttpHeadersInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    req = req.clone({\r\n      setParams: {\r\n        key: '7972971be0a049258526b251cd376161',\r\n      },\r\n    });\r\n    return next.handle(req);\r\n  }\r\n}\r\n","<div class=\"details\">\n    <div class=\"game-banner\">\n        <img class=\"game-banner-img\" src=\"{{ game.background_image }}\" alt=\"\">\n    </div>\n    <div class=\"game-content\">\n        <div class=\"details-wrapper\">\n            <div class=\"game-header\">\n                <h1 class=\"game-header-title\">{{ game.name }}</h1>\n                <h2 class=\"game-header-release-date\">\n                    Release: {{ game.released | date }}\n                </h2>\n                <p class=\"game-header-genres\">\n                    <span *ngFor=\"let genre of game.genres; let last = last\">\n                        {{ genre.name }}\n                        <span *ngIf=\"!last\">, </span>\n                    </span>\n                </p>\n                <div class=\"game-gauge\">\n                    <mwl-gauge\n                        class=\"two\"\n                        [max]=\"100\"\n                        [dialStartAngle]=\"100\"\n                        [dialEndAngle]=\"0\"\n                        [value]=\"gameRating\"\n                        [animated]=\"true\"\n                        [color]=\"getColor\"\n                        [animationDuration]=\"2\"\n                    ></mwl-gauge>\n                    <a class=\"game-gauge-label\" href=\"{{ game.metacritic_url }}\" target=\"_blank\">\n                        Metacritic\n                    </a>\n                </div>\n            </div>\n            <app-game-tabs [game]=\"game\"></app-game-tabs>\n        </div>\n    </div>\n</div>\n","import { ActivatedRoute, Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Game } from 'src/app/models';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent implements OnInit, OnDestroy {\n  gameRating: string;\n  gameId: string;\n  game: Game;\n  routeSub: Subscription;\n  gameSub: Subscription;\n\n  constructor(\n    private ActivatedRoute: ActivatedRoute,\n    private httpService: HttpService\n  ) { }\n\n  ngOnInit(): void {\n    this.routeSub = this.ActivatedRoute.params.subscribe((params: Params) =>{\n      this.gameId = params['id'];\n      this.getGameDetails(this.gameId);\n    });\n  }\n\n  getGameDetails(id: string): void {\n    this.gameSub = this.httpService\n      .getGameDetails(id)\n      .subscribe((gameResp: Game) => {\n        this.game = gameResp;\n\n        setTimeout(() => {\n          this.gameRating = this.game.metacritic\n        }, 1000)\n      });\n  }\n\n  getColor(value: number): string {\n    if (value > 75) {\n      return '#5ee432';\n    } else if (value > 50) {\n      return '#ffa50';\n    } else if (value > 30) {\n      return '#f7aa38';\n    } else {\n      return '#ef4655';\n    }\n  }\n  \n  ngOnDestroy(): void {\n    if (this.routeSub) {\n      this.routeSub.unsubscribe();\n    }\n\n    if (this.gameSub) {\n      this.gameSub.unsubscribe();\n    }\n  }\n}\n","<div class=\"game-tabs\">\n  <mat-tab-group mat-align-tabs=\"start\" backgroundColor=\"primary\">\n    <mat-tab label=\"About\">\n      <p *ngIf=\"game.parent_platforms?.length\" class=\"game-tabs-par\">\n        Platforms:\n        <span *ngFor=\"let game of game.parent_platforms; let last = last\">{{ game.platform.name }}<span *ngIf=\"!last\">,\n          </span></span>\n      </p>\n      <p *ngIf=\"game.publishers?.length\" class=\"game-tabs-par\">\n        Publisher:\n        <span *ngFor=\"let publisher of game.publishers; let last = last\">{{ publisher.name }}<span *ngIf=\"!last\">,\n          </span></span>\n      </p>\n      <p *ngIf=\"game.website\" class=\"game-tabs-par\">\n        Website:\n        <a href=\"{{ game.website }}\" target=\"_blank\" class=\"game-description\">\n          {{ game.website }}</a>\n      </p>\n      <div *ngIf=\"game.description\" [innerHTML]=\"game.description\" class=\"game-description\"></div>\n      <p class=\"game-tabs-votes\">\n        <ng-container *ngFor=\"let rating of game.rating\">\n          <span *ngIf=\"rating.title === 'exceptional'\">\n            <mat-icon class=\"game-votes-up\">thumb_up</mat-icon>\n            <span class=\"game-votes-count\">{{ rating.count || 0 }}</span>\n          </span>\n          <span *ngIf=\"rating.title ==='skip'\">\n            <mat-icon class=\"game-votes-down\">thumb_down</mat-icon>\n            <span class=\"game-votes-count\">{{ rating.count || 0 }}</span>\n          </span>\n        </ng-container>\n      </p>\n    </mat-tab>\n    <mat-tab *ngIf=\"game.screenshots?.length\" label=\"Screenshots\">\n      <img \n        *ngFor=\"let screenshot of game.screenshots\" \n        src=\"{{ screenshot.image }}\" \n        alt=\"screenshot\" \n        class=\"game-screenshot\"\n      />\n    </mat-tab>\n    <mat-tab *ngIf=\"game.trailers?.length\" label=\"Trailers\">\n      <video *ngFor=\"let trailer of game.trailers\" class=\"game-trailer\" controls>\n        <source src=\"{{ trailer.data?.max }}\" type=\"video/mp4\" />\n        Your browser doesn't support video tag\n      </video>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Game } from 'src/app/models';\n\n@Component({\n  selector: 'app-game-tabs',\n  templateUrl: './game-tabs.component.html',\n  styleUrls: ['./game-tabs.component.scss']\n})\nexport class GameTabsComponent implements OnInit {\n  @Input() game: Game;\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.game);\n  }\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'ng-video-games-db';\r\n}\r\n","<app-search-bar></app-search-bar>\r\n<router-outlet></router-outlet>\r\n","import { HttpErrorsInterceptor } from './components/interceptors/http-errors.interceptor';\r\nimport { HttpHeadersInterceptor } from './components/interceptors/http-headers.interceptor';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\n\r\nimport { GaugeModule } from \"angular-gauge\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\r\nimport { HomeComponent } from './components/home/home.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { GameTabsComponent } from './components/game-tabs/game-tabs.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchBarComponent,\r\n    HomeComponent,\r\n    DetailsComponent,\r\n    GameTabsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    GaugeModule.forRoot(),\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatTabsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpHeadersInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpErrorsInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm) {\n    this.router.navigate(['search', form.value.search]);\n  }\n\n}\n","<div class=\"search-container\">\n  <form class=\"search-form\" #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n    <span class=\"logo\" routerLink=\"/\">NgVGDB</span>\n    <input type=\"text\" class=\"search-input\" name=\"search\" ngModel placeholder=\"Search games...\" />\n    <button class=\"search-button\">Search</button>\n  </form>\n</div>\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError as observableThrowError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpErrorsInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((err) => {\r\n        console.log(err);\r\n        return observableThrowError(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { DetailsComponent } from './components/details/details.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'search/:game-search',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'details/:id',\r\n    component: DetailsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}